[gd_scene load_steps=35 format=2]

[ext_resource path="res://Scripts/PlayerController.gd" type="Script" id=1]
[ext_resource path="res://Scripts/MainCamera.gd" type="Script" id=2]
[ext_resource path="res://Assets/Models/splitting-maul.glb" type="PackedScene" id=3]
[ext_resource path="res://Scripts/TerrainOrchestrator.gd" type="Script" id=4]
[ext_resource path="res://Assets/Environment.tres" type="Environment" id=5]
[ext_resource path="res://Scripts/Inventory.gd" type="Script" id=6]
[ext_resource path="res://Scripts/MaulCollisions.gd" type="Script" id=12]

[sub_resource type="CylinderShape" id=1]
radius = 0.176615
height = 3.36326

[sub_resource type="BoxShape" id=2]
extents = Vector3( 0.0615791, 0.212795, 0.0719457 )

[sub_resource type="Animation" id=3]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Player/MainCamera/SplittingMaul:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( -15, 180, 0 ), Vector3( 110, 180, 0 ), Vector3( 65, 180, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/MainCamera/SplittingMaul:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( -0.000702856, 0.301014, -0.276068 ), Vector3( -0.0393309, -0.502118, -0.759015 ), Vector3( 0.236, -0.309, -0.295 ) ]
}

[sub_resource type="Animation" id=4]
resource_name = "maul_chop_side"
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("Player/MainCamera/SplittingMaul:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.731537, -0.269716, -0.282073 ), Vector3( 0.366966, -0.34431, -0.615516 ), Vector3( 0.233985, -0.268423, -0.3168 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/MainCamera/SplittingMaul:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 2.89516, -141.404, 86.5127 ), Vector3( 4.32538, -73.6841, 91.3517 ), Vector3( 69.6159, -178.722, 1.4577 ) ]
}

[sub_resource type="Animation" id=5]
resource_name = "maul_idle"
tracks/0/type = "value"
tracks/0/path = NodePath("Player/MainCamera/SplittingMaul:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0.236, -0.309, -0.295 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/MainCamera/SplittingMaul:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 65, 180, 0 ) ]
}

[sub_resource type="Animation" id=6]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("Player/MainCamera/SplittingMaul:rotation_degrees")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 65, 180, 0 ), Vector3( 65, 180, 0 ), Vector3( 20, 180, 0 ), Vector3( -15, 180, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/MainCamera/SplittingMaul:translation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0.236, -0.309, -0.295 ), Vector3( -0.000702843, -0.309, -0.276068 ), Vector3( -0.000702852, 0.0479763, -0.276068 ), Vector3( -0.000702856, 0.301014, -0.276068 ) ]
}

[sub_resource type="Animation" id=7]
resource_name = "maul_windup_side"
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("Player/MainCamera/SplittingMaul:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector3( 0.236, -0.309, -0.295 ), Vector3( 0.660754, -0.28623, -0.293686 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Player/MainCamera/SplittingMaul:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.5, 0.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 65, 180, 0 ), Vector3( 3.09109, -91.4429, 90.9881 ), Vector3( 3.02931, -130.208, 88.8361 ), Vector3( 2.67116, -143.806, 88.1568 ) ]
}

[sub_resource type="AnimationNodeAnimation" id=8]
animation = "maul_chop"

[sub_resource type="AnimationNodeAnimation" id=9]
animation = "maul_chop_side"

[sub_resource type="AnimationNodeAnimation" id=10]
animation = "maul_idle"

[sub_resource type="AnimationNodeAnimation" id=11]
animation = "maul_windup"

[sub_resource type="AnimationNodeAnimation" id=12]
animation = "maul_windup_side"

[sub_resource type="AnimationNodeStateMachineTransition" id=13]

[sub_resource type="AnimationNodeStateMachineTransition" id=14]

[sub_resource type="AnimationNodeStateMachineTransition" id=15]

[sub_resource type="AnimationNodeStateMachineTransition" id=16]

[sub_resource type="AnimationNodeStateMachineTransition" id=17]

[sub_resource type="AnimationNodeStateMachineTransition" id=18]

[sub_resource type="AnimationNodeStateMachine" id=19]
states/maul_chop/node = SubResource( 8 )
states/maul_chop/position = Vector2( 772, 62 )
states/maul_chop_side/node = SubResource( 9 )
states/maul_chop_side/position = Vector2( 772, 174 )
states/maul_idle/node = SubResource( 10 )
states/maul_idle/position = Vector2( 261, 117 )
states/maul_windup/node = SubResource( 11 )
states/maul_windup/position = Vector2( 483, 45 )
states/maul_windup_side/node = SubResource( 12 )
states/maul_windup_side/position = Vector2( 483, 191 )
transitions = [ "maul_idle", "maul_windup", SubResource( 13 ), "maul_windup", "maul_chop", SubResource( 14 ), "maul_chop", "maul_idle", SubResource( 15 ), "maul_idle", "maul_windup_side", SubResource( 16 ), "maul_windup_side", "maul_chop_side", SubResource( 17 ), "maul_chop_side", "maul_idle", SubResource( 18 ) ]

[sub_resource type="AnimationNodeStateMachinePlayback" id=20]

[sub_resource type="Shader" id=22]
code = "shader_type spatial;
render_mode blend_mix, specular_phong;

uniform float speed : hint_range(-1,1) = 0.0;

//colors
uniform sampler2D noise1;
uniform sampler2D noise2;
uniform sampler2D normalmap : hint_normal;
uniform vec4 color : hint_color;
uniform vec4 edge_color : hint_color;

//foam
uniform float edge_scale = 0.25;
uniform float near = 0.1;
uniform float far = 100f;

//waves
uniform vec2 wave_strengh = vec2(0.5, 0.25);
uniform vec2 wave_frequency = vec2(12.0, 12.0);
uniform vec2 time_factor = vec2(1.0, 2.0);

float rim(float depth){
	depth = 2f * depth - 1f;
	return near * far / (far + depth * (near - far));
}


float waves(vec2 pos, float time){
	return (wave_strengh.y * sin(pos.y * wave_frequency.y + time * time_factor.y)) + (wave_strengh.x * sin(pos.x * wave_frequency.x + time * time_factor.x));
}


void vertex(){
	VERTEX.y += waves(VERTEX.xy, TIME);
}


void fragment(){
	float time = TIME * speed;
	vec3 n1 = texture(noise1, UV + time).rgb;
	vec3 n2 = texture(noise2, UV - time * 0.2).rgb;
	
	vec2 uv_movement = UV * 4f;
	uv_movement += TIME * speed * 4f;
	
	float sum = (n1.r + n2.r) - 1f;
	
	
	float z_depth = rim(texture(DEPTH_TEXTURE, SCREEN_UV).x);
	float z_pos = rim(FRAGCOORD.z);
	float diff = z_depth - z_pos;
	
	vec2 displacement = vec2(sum * 0.05);
	diff += displacement.x * 50f;
	
	
	vec4 col = mix(edge_color, color, step(edge_scale, diff));
	
	vec4 alpha = vec4(1.0);
	alpha = texture(SCREEN_TEXTURE, SCREEN_UV + displacement);
	
	
	float fin = 0.0;
	if (sum > 0.0 && sum < 0.4) fin = 0.1;
	if (sum > 0.4 && sum < 0.8) fin = 0.0;
	if (sum > 0.8) fin = 1f;
	
	ALBEDO = vec3(fin) + mix(alpha.rgb, col.rgb, color.a);
	
	NORMALMAP = texture(normalmap, uv_movement).rgb;
	ROUGHNESS = 0.1;
	SPECULAR = 1f;
}"

[sub_resource type="OpenSimplexNoise" id=24]
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=25]
seamless = true
noise = SubResource( 24 )

[sub_resource type="OpenSimplexNoise" id=26]

[sub_resource type="NoiseTexture" id=27]
seamless = true
noise = SubResource( 26 )

[sub_resource type="ShaderMaterial" id=23]
shader = SubResource( 22 )
shader_param/speed = 0.02
shader_param/color = Color( 0.270588, 0.521569, 0.862745, 1 )
shader_param/edge_color = Color( 1, 1, 1, 1 )
shader_param/edge_scale = 0.25
shader_param/near = 0.1
shader_param/far = 100.0
shader_param/wave_strengh = Vector2( 0.05, 0.1 )
shader_param/wave_frequency = Vector2( 8, 8 )
shader_param/time_factor = Vector2( 1, 2 )
shader_param/noise1 = SubResource( 25 )
shader_param/noise2 = SubResource( 27 )

[sub_resource type="PlaneMesh" id=21]
material = SubResource( 23 )
size = Vector2( 512, 512 )
subdivide_width = 64
subdivide_depth = 64

[node name="Spatial" type="Spatial"]

[node name="Player" type="KinematicBody" parent="."]
transform = Transform( -0.0083079, 0, 0.999966, 0, 0.75, 0, -0.999966, 0, -0.0083079, -1.10536, 82.8795, 0 )
script = ExtResource( 1 )
speed = 6

[node name="CollisionShape" type="CollisionShape" parent="Player"]
transform = Transform( 0.759721, 0, 0.00915567, 0, 0.60865, 0, 0.00996583, 0, 0.811695, 0.0145004, 1.15204, 0.181293 )
shape = SubResource( 1 )

[node name="MainCamera" type="Camera" parent="Player"]
transform = Transform( 1, 0, 3.72529e-08, 0, 1.33333, 0, -3.72529e-08, 0, 1, 0, 2.31895, 0 )
fov = 50.0
far = 200.0
script = ExtResource( 2 )

[node name="SplittingMaul" parent="Player/MainCamera" instance=ExtResource( 3 )]
transform = Transform( -0.350002, -2.77314e-08, -1.29313e-08, 0, 0.147918, -0.317209, 3.05982e-08, -0.31721, -0.147917, 0.236, -0.309, -0.295 )

[node name="RigidBody" type="RigidBody" parent="Player/MainCamera/SplittingMaul"]
transform = Transform( 1, 0, 0, 2.98023e-08, 1, 1.16415e-09, 3.72529e-09, -1.60653e-08, 1, -0.00121927, 0.00917411, 0.0195608 )
contacts_reported = 2
contact_monitor = true
script = ExtResource( 12 )

[node name="CollisionShape" type="CollisionShape" parent="Player/MainCamera/SplittingMaul/RigidBody"]
transform = Transform( 1, 7.45058e-09, -8.9407e-08, 2.01166e-07, 1, 9.73232e-08, -7.07805e-08, -1.87429e-07, 1, -0.00576079, 2.15492, 0.440961 )
shape = SubResource( 2 )
disabled = true

[node name="Inventory" type="Spatial" parent="Player"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 8.9407e-08, 2.29577, -0.617232 )
script = ExtResource( 6 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.481736, 0.0467511, -0.875069, 0.875808, 0.00833493, 0.482588, 0.0298552, -0.998872, -0.0369298, -175.271, 68.115, 0.136545 )
shadow_enabled = true
shadow_color = Color( 0.00392157, 0.00784314, 0.117647, 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/maul_chop = SubResource( 3 )
anims/maul_chop_side = SubResource( 4 )
anims/maul_idle = SubResource( 5 )
anims/maul_windup = SubResource( 6 )
anims/maul_windup_side = SubResource( 7 )

[node name="TerrainOrchestrator" type="Spatial" parent="."]
script = ExtResource( 4 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 5 )

[node name="AnimationTree" type="AnimationTree" parent="."]
tree_root = SubResource( 19 )
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/playback = SubResource( 20 )

[node name="Water" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -5, 0 )
mesh = SubResource( 21 )
material/0 = null
